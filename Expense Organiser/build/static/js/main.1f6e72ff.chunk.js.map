{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","NewExpense","isEditing","setIsEditing","onClick","enteredExpenseData","random","onAddExpense","onCancel","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f6e72ff.chunk.js","sourcesContent":["import \"./Card.css\";\r\nfunction Card(props) {\r\n  const classes = \"card \" + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ExpenseDate.css\";\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\nexport default ExpenseDate;\r\n","//import { useState } from \"react\";\r\nimport \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nfunction ExpenseItem(props) {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date}></ExpenseDate>\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">â‚¹{props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\n\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No Expenses Found!!!!!!</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\n\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\nfunction ExpensesChart(props) {\r\n  const chartDataPoints = [\r\n    {\r\n      label: \"Jan\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Feb\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Mar\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Apr\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"May\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Jun\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Jul\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Aug\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Sep\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Oct\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Nov\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Dec\",\r\n      value: 0,\r\n    },\r\n  ];\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n}\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import \"./ExpenseForm.css\";\r\nimport { useState } from \"react\";\r\nfunction ExpenseForm(props) {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  function submitHandler(event) {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  }\r\n  function titleChangeHandler(event) {\r\n    setEnteredTitle(event.target.value);\r\n  }\r\n  function amountChangeHandler(event) {\r\n    setEnteredAmount(event.target.value);\r\n  }\r\n  function dateChangeHandler(event) {\r\n    setEnteredDate(event.target.value);\r\n  }\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title: </label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={titleChangeHandler}\r\n            value={enteredTitle}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount: </label>\r\n          <input\r\n            type=\"number\"\r\n            value={enteredAmount}\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date: </label>\r\n          <input\r\n            type=\"date\"\r\n            value={enteredDate}\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 4, 12),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  function addExpenseHandler(expense) {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}